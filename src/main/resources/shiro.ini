[main]
authc.loginUrl=/login
;注释：用于配置当需要认证时需要跳转的URL地址

ds=org.apache.commons.dbcp.BasicDataSource
ds.driverClassName=com.mysql.jdbc.Driver
ds.url=jdbc:mysql://localhost:3306/buildmyweb
ds.username=root
ds.password=root
;注释：定义一个DBCP的DataSource，用于获取JDBC数据库连接

jdbcRealm=org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.dataSource=$ds
jdbcRealm.authenticationQuery=select password from user where username = ?
;注释：authenticationQuery 该SQL语句用于提供身份认证，即通过username查询password。
jdbcRealm.userRolesQuery=select r.role_name from user u , user_role ur , role r where u.id = ur.user_id and r.id = ur.role_id and u.username=?
;注释：userRolesQuery 该SQL语句用于提供基于角色的授权验证（属于粗粒度级别），即通过username查询role_name。
jdbcRealm.permissionsQuery=select p.permission_name from role r , role_permission rp , permission p where r.id = rp.role_id and p.id = rp.permission_id and r.role_name=?
;注释：permissionsQuery 该SQL语句用于提供基于权限的授权验证（属于细粒度级别），即通过role_name查询permission_name
jdbcRealm.permissionsLookupEnabled=true
;注释：需要开启permissionsLookupEnabled开关，默认是关闭的
securityManager.realms=$jdbcRealm

cacheManager=org.apache.shiro.cache.MemoryConstrainedCacheManager
securityManager.cacheManager=$cacheManager
;注释：使用缓存，这样不用频繁操作数据库了

passwordMatcher=org.apache.shiro.authc.credential.PasswordMatcher
jdbcRealm.credentialsMatcher=$passwordMatcher
;注释：目前在数据库里保存的是明文的密码，配置jdbcRealm.credentialsMatcher可进行加密


[urls]
/=anon
;注释：对于"/" 请求(首页)可以匿名访问
/space/**=authc
;对于以"/space"开头的请求，均由authc过滤器处理，也就是完成身份认证操作。